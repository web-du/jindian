//const API_ROOT = 'https://www.jindianim.com';
const API_ROOT = 'https://uat.jindianim.com';

const URL_TYPE = {
	'ADMIN': 'admin',
	'USER': 'user',
	'PUBLIC': 'public',
	'FILE': 'file'
}
const URL_METHOD = {
	GET: 'get',
	POST: 'post',
}
const urls={
	/*********通用类接口**********/
	getCategoryAndTag: {
		path: '/rpc?clazz=ApiCommonController&method=getCategoryAndTag',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '获取书签列表'
	},

    getIndexSearchParams: {
		path: '/rpc?clazz=ApiCommonController&method=getIndexSearchParams',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '获取删选条件'
	},

    sendVerifyCode: {
		path: '/rpc?clazz=ApiCommonController&method=sendVerifyCode',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '发送验证码 手机/邮箱'
	},
	/*********通用类接口**********/


	/**********书籍类接口***********/
	getSearchList: {
		path: '/rpc?clazz=ApiBookController&method=getSearchList',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '用户登录'
	},

	getMyEvaluateList: {
		path: '/rpc?clazz=ApiBookController&method=getKeywordSearchList',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '关键字搜索'
	},

	getBookInfo: {
		path: '/rpc?clazz=ApiBookController&method=getBookInfo',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '书籍详情'
	},

	getAuthorBooks: {
		path: '/rpc?clazz=ApiBookController&method=getAuthorBooks',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '获取作者数据'
	},

	getSimilarBooks: {
		path: '/rpc?clazz=ApiBookController&method=getSimilarBooks',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '获取同类书籍'
	},
	getAuthorBooksMore: {
		path: '/rpc?clazz=ApiBookController&method=getAuthorBooksMore',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '获取作者书籍更多'
	},

    getPopularList: {
		path: '/rpc?clazz=ApiIndexController&method=getPopularList',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '畅销精选'
	},

    getNewRecommendList: {
		path: '/rpc?clazz=ApiIndexController&method=getNewRecommendList',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '签约新作'
	},

    getEditorRecommendList: {
		path: '/rpc?clazz=ApiIndexController&method=getEditorRecommendList',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '编辑推荐'
	},

    getLatestUpdateList: {
		path: '/rpc?clazz=ApiIndexController&method=getLatestUpdateList',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '最近更新'
	},

    getBookFansRankList: {
		path: '/rpc?clazz=ApiBookController&method=getBookFansRankList',
		type: URL_TYPE.USER,
		method: URL_METHOD.GET,
		commonts: '获取书籍粉丝排行'
	},





	/**********获取排行接口***********/
    getRankList: {
        path: '/rpc?clazz=ApiIndexController&method=getRankList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '获取排行榜'
    },

	/**********获取免费类接口***********/
    getNewFreeList: {
        path: '/rpc?clazz=ApiIndexController&method=getNewFreeList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '新书免费'
    },
    getLimitFreeList: {
        path: '/rpc?clazz=ApiIndexController&method=getLimitFreeList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '限时免费'
    },

    getBestFreeList: {
        path: '/rpc?clazz=ApiIndexController&method=getBestFreeList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '免费精品'
    },

    /**********全本接口***********/
    getBestEndList: {
        path: '/rpc?clazz=ApiIndexController&method=getBestEndList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '完结金榜'
    },

    getRecentEndList: {
        path: '/rpc?clazz=ApiIndexController&method=getRecentEndList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '获取最新完结'
    },

    /**********发现接口***********/
    getSearchRankList: {
        path: '/rpc?clazz=ApiIndexController&method=getSearchRankList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '大家都在搜'
    },

    getBoyFavoriteList: {
        path: '/rpc?clazz=ApiIndexController&method=getBoyFavoriteList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '获取男生最爱'
    },

    getGirlFavoriteList: {
        path: '/rpc?clazz=ApiIndexController&method=getGirlFavoriteList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '获取女生最爱'
    },






    /***********评论类接口************/
	getCommentList: {
		path: '/rpc?clazz=ApiCommentController&method=getCommentList',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '获取评论列表'
	},

    addPraise: {
		path: '/rpc?clazz=ApiCommentController&method=addPraise',
		type: URL_TYPE.USER,
		method: URL_METHOD.GET,
		commonts: '评论点赞/点踩'
	},

    addComment: {
		path: '/rpc?clazz=ApiCommentController&method=addComment',
		type: URL_TYPE.USER,
		method: URL_METHOD.GET,
		commonts: '评论发表/回复'
	},


    getCommentDetail: {
		path: '/rpc?clazz=ApiCommentController&method=getCommentDetail',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '查询评论详情'
	},

    /***********书评类接口************/
	getReviewList: {
		path: '/rpc?clazz=ApiReviewController&method=getReviewList',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '书论区'
	},

    reviewAddPraise: {
		path: '/rpc?clazz=ApiReviewController&method=addPraise',
		type: URL_TYPE.USER,
		method: URL_METHOD.GET,
		commonts: '书评点赞/点踩'
	},

    addReview: {
		path: '/rpc?clazz=ApiReviewController&method=addReview',
		type: URL_TYPE.USER,
		method: URL_METHOD.GET,
		commonts: '书评发表/回复'
	},

    getReviewDetail: {
		path: '/rpc?clazz=ApiReviewController&method=getReviewDetail',
		type: URL_TYPE.PUBLIC,
		method: URL_METHOD.GET,
		commonts: '书评详情'
	},


    /***********用户类接口************/
    login: {
        path: '/rpc?clazz=ApiUserController&method=login',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '登录'
    },

    getAccountCoin: {
        path: '/rpc?clazz=ApiUserController&method=getAccountCoin',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取当前余额'
    },

    getAccountInfo: {
        path: '/rpc?clazz=ApiUserController&method=getAccountInfo',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '帐户基本信息'
    },

    getCommentMessageList: {
        path: '/rpc?clazz=ApiMessageController&method=getCommentMessageList',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取消息列表'
    },

    getMessageTypeInfo: {
        path: '/rpc?clazz=ApiMessageController&method=getMessageTypeInfo',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取通知列表'
    },

    getFansValList: {
        path: '/rpc?clazz=ApiUserController&method=getFansValList',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取我的粉丝列表'
    },

    getUserTaskInfo: {
        path: '/rpc?clazz=ApiUserController&method=getUserTaskInfo',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '我的任务'
    },

    getSignState: {
        path: '/rpc?clazz=ApiUserController&method=getSignState',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取签到状态'
    },

    signToday: {
        path: '/rpc?clazz=ApiUserController&method=signToday',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '签到'
    },

    bindEmail: {
        path: '/rpc?clazz=ApiUserController&method=bindEmail',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '绑定邮箱'
    },

    modifyPassword: {
        path: '/rpc?clazz=ApiUserController&method=modifyPassword',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '修改密码'
    },

    findPassword: {
        path: '/rpc?clazz=ApiUserController&method=findPassword',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '找回密码'
    },

    getAppSetting: {
        path: '/rpc?clazz=ApiUserController&method=getAppSetting',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取APP设置'
    },

    updateAppSetting: {
        path: '/rpc?clazz=ApiUserController&method=updateAppSetting',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '更新APP设置'
    },

    getAppReadSetting: {
        path: '/rpc?clazz=ApiUserController&method=getAppReadSetting',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取阅读设置'
    },

    updateAppReadSetting: {
        path: '/rpc?clazz=ApiUserController&method=updateAppReadSetting',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '更新阅读设置'
    },

    getMembershipInfo: {
        path: '/rpc?clazz=ApiUserController&method=getMembershipInfo',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取会员中心信息'
    },

    getBindState: {
        path: '/rpc?clazz=ApiUserController&method=getBindState',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取邮箱绑定状态'
    },

    getUserInfo: {
        path: '/rpc?clazz=ApiUserController&method=getUserInfo',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取用户资料'
    },

    updateUserInfo: {
        path: '/rpc?clazz=ApiUserController&method=updateUserInfo',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '修改用户资料'
    },

    uploadAvatar: {
        path: '/rpc?clazz=ApiUserController&method=uploadAvatar',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '上传用户头像'
    },





    getAutoSubscribeState: {
        path: '/rpc?clazz=ApiUserController&method=getAutoSubscribeState',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '获取自动订阅状态'
    },

    updateAutoSubscribeState: {
        path: '/rpc?clazz=ApiUserController&method=updateAutoSubscribeState',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '设置自动订阅'
    },





    /***********书架类接口************/
    getBookShelfIndex: {
        path: '/rpc?clazz=ApiCollectController&method=getBookShelfIndex',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '书架书籍列表'
    },

    addFavorite: {
        path: '/rpc?clazz=ApiCollectController&method=addFavorite',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '收藏加入书架'
    },

    deleteFavorite: {
        path: '/rpc?clazz=ApiCollectController&method=deleteFavorite',
        type: URL_TYPE.USER,
        method: URL_METHOD.GET,
        commonts: '删除收藏'
    },

    /***********打赏接口************/
    getGiftList: {
        path: '/rpc?clazz=ApiCommonController&method=getGiftList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '获取打赏列表'
    },

    addRewardGift: {
        path: '/rpc?clazz=ApiPayController&method=addRewardGift',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '打赏作者'
    },

    /***********支付接口************/
    createAlipayOrder4App: {
        path: '/rpc?clazz=ApiPayController&method=createAlipayOrder4App',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '创建支付宝订单'
    },

    /***********阅读接口************/
    getReadInfo: {
        path: '/rpc?clazz=ApiBookController&method=getReadInfo',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '获取书籍阅读详情'
    },

    getChapterContent: {
        path: '/rpc?clazz=ApiBookController&method=getChapterContent',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '阅读下一章/上一章'
    },

    addBookMark: {
        path: '/rpc?clazz=ApiBookController&method=addBookMark',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '添加书签'
    },

    getBookMarkList: {
        path: '/rpc?clazz=ApiBookController&method=getBookMarkList',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '获取书签列表'
    },

    deleteBookMark: {
        path: '/rpc?clazz=ApiBookController&method=deleteBookMark',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '删除标签'
    },

    getBookCatalog: {
        path: '/rpc?clazz=ApiBookController&method=getBookCatalog',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '书籍目录'
    },

    getChapterContentByPercent: {
        path: '/rpc?clazz=ApiBookController&method=getChapterContentByPercent',
        type: URL_TYPE.PUBLIC,
        method: URL_METHOD.GET,
        commonts: '百分比获取书籍章节'
    },


}



//
// const myHttp = {
//     ajax(options) {
//         var url = API_ROOT + options.url;
//         var successCallback = options.success || function (res) {
//         };
//         var params = options.params;
//         $.ajax({
//             type: "POST",
//             data: params,
//             async: true,
// 			headers:options.headers,
//             dataType: "json",
//             url: url,
//             contentType: "text/plain",
//
//             beforeSend: function (res) {
//                 // res.setRequestHeader("jd-token", "Chenxizhang");
//             },
//             success: function (res) {
//                 successCallback(res);
//             },
//             error: function (res) {
//                 //console.log(res)
//
//             }
//         });
//     },
//     get(options) {
//
//     },
//     post(options) {
//
//     },
// }



function myHttp(options){
    var url = API_ROOT + options.url;
    var params = options.params;
    var successCallback = options.success || function (res) {};
    $.ajax({
        type: "POST",
        data: params,
        async: true,
        headers:options.headers,
        dataType: "json",
        url: url,
        contentType: "text/plain",
        beforeSend: function (res) {
            // res.setRequestHeader("jd-token", "Chenxizhang");
        },
        success: function (res) {
            successCallback(res);
        },
        error: function (res) {
            //console.log(res)
        }
    });
}




 function getQueryString(url,name) {
    var reg = new RegExp("([^|&]|[^|?])" + name + "=([^&]*)(&|$)", "i");
    var reg_rewrite = new RegExp("(^|/)" + name + "/([^/]*)(/|$)", "i");
    var arr=[];
    var turl = null;
    if(reg.test(url)){
        turl = (reg.exec(url));
    }else if(reg_rewrite.test(url)){
        turl = (reg_rewrite.exec(url));
    }

    for(var i in turl){
        arr[i] = turl[i];
    }
    return (arr[2]);
}

function tojson(arr){
	if(!arr.length) return null;

	var i = 0;
	len = arr.length,
	array = [];
	for(;i<len;i++){
		array.push({"projectname":arr[i][0],"projectnumber":arr[i][1]});
	}
	return JSON.stringify(array);

}


//加载分页
if (!NeuF) var NeuF = {};
NeuF.ScrollPage = function (obj, options, callback) {
    var _defaultOptions = { delay: 500, marginBottom: 50 };
    options = $.extend(_defaultOptions, options);
    this.isScrolling = false; //是否在滚动
    this.oriPos = 0; //原始位置
    this.curPos = 0; //当前位置
    var me = this; //顶层
    var $obj = (typeof obj == "string") ? $("#" + obj) : $(obj);

    $obj.scroll(function (ev) {
        me.curPos = $obj.scrollTop();
        if ($(window).height() + $(window).scrollTop() >= $(document.body).height() - options.marginBottom) {
            if (me.isScrolling == true) return;
            me.isScrolling = true;
            setTimeout(function () { me.isScrolling = false;}, options.delay); //重复触发间隔毫秒;
            if (typeof callback == "function") callback.call(null, me.curPos - me.oriPos);
        };
        me.oriPos = me.curPos;
    });
};

function toIndex2(){
    jindianwebjs.ToHome(1);
}
function toIndex(){
    jindianwebjs.TaskToHome(1);
}

function closeWinView(){
    jindianwebjs.closeWinView(false);

}

//i : 0-255
function saveScreenBrightness(i){
    jindianwebjs.saveScreenBrightness(i);

}

function startAutoBrightness(){
    jindianwebjs.startAutoBrightness();

}



function toLogin(){
    jindianwebjs.ToLogin();
}

function outLogin(){
    jindianwebjs.OutLogin();
}
